# vim: ft=conf
#
# In this config file, qutebrowser's key bindings are configured.
# The format looks like this:
#
# [keymode]
#
# command
#   keychain
#   keychain2
#   ...
#
# All blank lines and lines starting with '#' are ignored.
# Inline-comments are not permitted.
#
# keymode is a comma separated list of modes in which the key binding should be
# active. If keymode starts with !, the key binding is active in all modes
# except the listed modes.
#
# For special keys (can't be part of a keychain), enclose them in `<`...`>`.
# For modifiers, you can use either `-` or `+` as delimiters, and these names:
#
#  * Control: `Control`, `Ctrl`
#  * Meta:    `Meta`, `Windows`, `Mod4`
#  * Alt:     `Alt`, `Mod1`
#  * Shift:   `Shift`
#
# For simple keys (no `<>`-signs), a capital letter means the key is pressed
# with Shift. For special keys (with `<>`-signs), you need to explicitly add
# `Shift-` to match a key pressed with shift.  You can bind multiple commands
# by separating them with `;;`.

[!normal]

leave-mode
    <Escape>
    <Ctrl-[>

[normal]
# Keybindings for normal mode.

search
    <Escape>

set-cmd-text -s :open
    o

set-cmd-text :open {url}
    go

set-cmd-text -s :open -t
    O

set-cmd-text :open -t {url}
    gO

set-cmd-text -s :open -w
    wo

set-cmd-text :open -w {url}
    wO

open -t
    ga
    <Ctrl-T>

tab-only
    wco

reload
    e

reload -f
    b

back
    H
    <Backspace>

back -t
    wwh

back -w
    wh

forward
    é

forward -t
    wl

forward -w
    wé

fullscreen
    <F11>

hint
    f

hint all tab
    F

hint all window
    wf

hint all hover
    ;h

hint images
    ;i

hint links fill ":open {hint-url}"
    ;o

hint links fill ":open -b {hint-url}"
    .o

hint links yank
    ;y

hint links yank-primary
    ;Y

hint links rapid
    ;r

hint links rapid-win
    ;R

hint links download
    ;d

scroll -50 0
    c

scroll 0 50
    t

scroll 0 -50
    s

scroll 50 0
    r

undo
    u
    <Ctrl-Shift-T>

scroll-perc 0
    gg

scroll-perc
    G

search-next
    n

search-prev
    N

enter-mode insert
    i

yank
    yy

yank -s
    yY

yank -t
    yt

yank -ts
    yT

paste
    pp

paste -s
    pP

paste -w
    wp

paste -ws
    wP

quickmark-save
    m

set-cmd-text -s :quickmark-load
    q

set-cmd-text -s :quickmark-load -w
    wq

save
    wsf

set-cmd-text -s :set
    wss

set-cmd-text -s :set -t
    wsl

set-cmd-text -s :set keybind
    wsk

zoom-out
    -

zoom-in
    +

zoom
    =

navigate prev
    [[

navigate next
    ]]

navigate up
    gu

navigate increment
    <Ctrl-A>

navigate decrement
    <Ctrl-X>

inspector
    wi

download
    gd

download-cancel
    ad

download-remove --all
    dra

view-source
    gf

enter-mode passthrough
    <Ctrl-V>

quit
    <Ctrl-Q>

scroll-page 0 1
    <Ctrl-F>

scroll-page 0 -1
    <Ctrl-B>

scroll-page 0 0.5
    <Ctrl-D>

scroll-page 0 -0.5
    <Ctrl-U>

home
    <Ctrl-h>

stop
    <Ctrl-s>

print
    <Ctrl-Alt-p>

close
    ZZ

save-password
    ps

load-password
    pl

load-password-submit
    pu

load-password-in-current-field
    pf

[insert]
# Keybindings for insert mode.
# Since normal keypresses are passed through, only special keys are
# supported in this mode.
# Useful hidden commands to map in this section:
#  * `open-editor`: Open a texteditor with the focused field.

open-editor
    <Ctrl-E>

[hint]
# Keybindings for hint mode.
# Since normal keypresses are passed through, only special keys are
# supported in this mode.
# Useful hidden commands to map in this section:
#  * `follow-hint`: Follow the currently selected hint.

follow-hint
    <Return>

[command]
# Keybindings for command mode.
# Since normal keypresses are passed through, only special keys are
# supported in this mode.
# Useful hidden commands to map in this section:
#  * `command-history-prev`: Switch to previous command in history.
#  * `command-history-next`: Switch to next command in history.
#  * `completion-item-prev`: Select previous item in completion.
#  * `completion-item-next`: Select next item in completion.
#  * `command-accept`: Execute the command currently in the commandline.

command-history-prev
    <Ctrl-P>

command-history-next
    <Ctrl-N>

completion-item-prev
    <Shift-Tab>
    <Up>

completion-item-next
    <Tab>
    <Down>

command-accept
    <Return>
    <Ctrl-J>
    <Shift-Return>

[prompt]
# Keybindings for prompts in the status line.
# You can bind normal keys in this mode, but they will be only active
# when a yes/no-prompt is asked. For other prompt modes, you can only
# bind special keys.
# Useful hidden commands to map in this section:
#  * `prompt-accept`: Confirm the entered value.
#  * `prompt-yes`: Answer yes to a yes/no question.
#  * `prompt-no`: Answer no to a yes/no question.

prompt-accept
    <Return>
    <Ctrl-J>
    <Shift-Return>

prompt-yes
    y

prompt-no
    n

[command,prompt]

rl-backward-char
    <Ctrl-B>

rl-forward-char
    <Ctrl-F>

rl-backward-word
    <Alt-B>

rl-forward-word
    <Alt-F>

rl-beginning-of-line
    <Ctrl-A>

rl-end-of-line
    <Ctrl-E>

rl-unix-line-discard
    <Ctrl-U>

rl-kill-line
    <Ctrl-K>

rl-kill-word
    <Alt-D>

rl-unix-word-rubout
    <Ctrl-W>

rl-yank
    <Ctrl-Y>

rl-delete-char
    <Ctrl-?>

rl-backward-delete-char
    <Ctrl-H>

enter-mode normal
    wc
